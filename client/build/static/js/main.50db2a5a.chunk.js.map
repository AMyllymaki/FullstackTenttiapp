{"version":3,"sources":["components/NormalUser/Kysymys.js","images/selmaSpin.gif","components/ObjektiRakentajat/kysymysObjekti.js","ServerSettings.js","components/HttpRequests/vastausVaihtoehtoRequests.js","components/HttpRequests/tenttiKysymysRequests.js","components/HttpRequests/vastausRequests.js","messages.js","components/NormalUser/VastausLista.js","components/Dropzone.js","components/Admin/KysymysMuokattava.js","components/ObjektiRakentajat/vastausVaihtoehtoObjekti.js","components/HttpRequests/tenttiRequests.js","components/HttpRequests/kysymysRequests.js","components/Admin/VastausListaAdmin.js","components/ObjektiRakentajat/tenttiObjekti.js","components/HttpRequests/loginRequests.js","components/HttpRequests/registerRequests.js","components/SweetAlerts.js","components/StorybookComponents/StoryButton.js","components/LoginPage/Login.js","App.js","AppIntlWrapper.js","index.js"],"names":["GreenCheckbox","withStyles","root","color","green","checked","props","Checkbox","Kysymys","kysymys","vastausVaihtoehdot","state","useContext","UserContext","checkIfChecked","vaihtoehtoID","valinnat","vastaukset","filter","vastaus","vaihtoehto_id","length","tyyppi","Paper","style","width","padding","display","flexDirection","justifyContent","näytäVastaukset","map","vastausVaihtoehto","i","alignItems","marginTop","id","disableRipple","inputProps","oikea_vastaus","vaihtoehto","onChange","handleCheckboxChange","undefined","handleChange","uusiKysymys","uuidv4","kuvaus","oikeatVastaukset","uusiKysymysKannasta","aihe_id","ServerSettings","baseURL","haeVastausVaihtoehdotJaLiitäKysymykseen","a","axios","get","result","statusText","data","lisääVastausVaihtoehto","vastausvaihtoehto","config","headers","Authorization","localStorage","getItem","post","toString","poistaVastausVaihtoehto","delete","muokkaaVastausVaihtoehtoa","put","haeTentinKysymykset","console","log","kysymykset","actions","Promise","all","then","lisääKysymysTenttiin","tenttiID","kysymysID","tenttikysymysID","tentti_id","kysymys_id","lisääVastaus","haeKäyttäjänVastauksetTenttiin","käyttäjäID","muokkaaVastausta","defineMessages","btnVaihdaKieli","defaultMessage","description","btnTentti","btnTarkistaState","btnVaihdaNormikäyttäjäksi","btnVaihdaAdminiksi","btnKirjauduUlos","btnUusiTili","btnKirjaudu","btnLuoTili","btnTakaisinKirjautumiseen","btnNäytävastaukset","btnPiilotaVastaukset","btnNäytäGraafi","titleKirjautuminen","titleTilinluonti","PlaceholderKäyttäjätunnus","PlaceholderSalasana","PlaceholderSalasanaUudestaan","VastausLista","dispatch","useState","graafi","setGraafi","valitseVastaus","tmpVastaukset","haeIDllä","käyttäjä_id","response","vastauspäivämäärä","push","type","payload","catch","error","checkValittuTentti","valittuTentti","muutaNäytäGraafi","näytäGraafi","taulukko","find","alkio","valittuTenttiIndex","tentit","flexWrap","tentti","Button","variant","onClick","tmpKysymykset","tmpTentit","JSON","parse","stringify","muutettuTentti","forEach","valitseTentti","nimi","loading","src","logo","alt","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","stacked","xAxes","scale","luoGraafi","paddingTop","tmpGraafi","messages","Dropzone","onDrop","useCallback","acceptedFiles","file","url","URL","createObjectURL","getPictureFromDropzone","fd","FormData","append","name","useDropzone","getRootProps","getInputProps","isDragActive","border","paddingLeft","paddingRight","KysymysMuokattava","kysymysNimi","addPicture","setAddPicture","picture","setPicture","haeVastausvaihtoehtoKomponentinNimi","vastausVaihtoehtoNimi","TextField","kysymysnro","fullWidth","e","handleInputChange","target","value","muutaKysymyksenKuvaus","minHeight","maxHeight","paddingBottom","IconButton","handleDelete","height","checkboxClicked","muutaVastauksenKuvaus","PoistaVastaus","handleAdding","uusiVastausvaihtoehto","haeTentit","lisääTentti","poistaTentti","muokkaaTenttiä","lisääKysymys","poistaKysymys","muokkaaKysymystä","VastausListaAdmin","lisääKomponentti","tenttiJohonLisätään","kysymysJohonLisätään","vVaihtoehto","minimipisteet","lisääTenttiTestaustaVarten","muutaKomponenttia","uusiArvo","muutettuKysymys","muutettuVastausvaihtoehto","vastausVaihtoehtoID","oikeaVastausMuutos","poistaKomponentti","PoistettavanKysymys","PoistettavanTentti","tmpTestausTentit","testausTentit","tmpTentti","haeTenttiKomponentinNimi","tentinNimi","muutaTenttiä","loginUsername","credentials","loginToken","token","bodyParameters","registerUser","status","LoginSuccess","username","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title","StoryButton","children","rest","className","Login","LoginWithUsername","käyttäjätunnus","salasana","password","LoggedUser","setItem","user","rooli","RegisterUser","passwordAgain","setIsLogin","isLogin","setUsername","setPassword","setPasswordAgain","text","marginRight","mainContainerStyle","flex","marginBottom","tableContainerStyle","createContext","nollaaVastaukset","window","removeItem","initialState","admin","käyttäjäRooli","reducer","action","newState","App","useReducer","ws","useRef","useEffect","current","WebSocket","onopen","onmessage","evt","message","onclose","LoginWithToken","luoTentit","User","LoggedToken","exception","luodutTentit","isLoggedIn","Provider","vaihdaKieli","addLocaleData","locale_en","locale_fi","messages_fi","messages_en","InitialLanguage","navigator","language","split","AppIntlWrapper","kieli","setKieli","locale","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50db2a5a.chunk.js","sourcesContent":["import Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { UserContext } from '../../App.js'\r\nimport { useContext } from 'react';\r\n\r\n\r\n\r\n//This is from material-ui documentation\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n        color: green[400],\r\n        '&$checked': {\r\n            color: green[600],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nfunction arrayEquals(a, b) {\r\n    return Array.isArray(a) &&\r\n        Array.isArray(b) &&\r\n        a.length === b.length &&\r\n        a.every((val, index) => val === b[index]);\r\n}\r\n\r\n\r\n\r\nfunction Kysymys(props) {\r\n\r\n\r\n    const { kysymys, vastausVaihtoehdot } = props.kysymys\r\n \r\n    const { state } = useContext(UserContext)\r\n\r\n    const handleChange = (vaihtoehtoID) => {\r\n\r\n        let vastaukset = state.vastaukset.filter(vastaus => vastaus.vaihtoehto_id === vaihtoehtoID)\r\n\r\n        if (vastaukset.length === 0) {\r\n\r\n            props.handleCheckboxChange(vaihtoehtoID, undefined)\r\n            return\r\n        }\r\n\r\n        props.handleCheckboxChange(vaihtoehtoID, vastaukset[0].id)\r\n    }\r\n\r\n    const checkIfChecked = (vaihtoehtoID) => {\r\n\r\n        let valinnat = state.vastaukset.filter(vastaus => vastaus.vaihtoehto_id === vaihtoehtoID)\r\n\r\n        if (valinnat.length === 0) {\r\n            return false\r\n        }\r\n\r\n        return valinnat[0].tyyppi\r\n    }\r\n\r\n    return (\r\n\r\n        <Paper style={{ width: '100%', padding: 15 }}>\r\n\r\n            <div style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                {state.näytäVastaukset ?\r\n\r\n                    <div >\r\n                        {kysymys}\r\n                        {vastausVaihtoehdot.map((vastausVaihtoehto, i) =>\r\n\r\n                            <div key={i} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', marginTop: 10 }}>\r\n                                <Checkbox\r\n                                    checked={checkIfChecked(vastausVaihtoehto.id)}\r\n                                    color=\"primary\"\r\n                                    disableRipple={true}\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n\r\n                                />\r\n                                <GreenCheckbox\r\n\r\n                                    checked={vastausVaihtoehto.oikea_vastaus}\r\n                                    color=\"primary\"\r\n                                    disableRipple={true}\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n\r\n                                {vastausVaihtoehto.vaihtoehto}\r\n\r\n                            </div>)}\r\n                    </div>\r\n                    :\r\n                    <div style={{}}>\r\n                        {kysymys}\r\n                        {vastausVaihtoehdot.map((vastausVaihtoehto, i) =>\r\n\r\n                            <div key={i} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', marginTop: 10 }}>\r\n                                <Checkbox\r\n                                    checked={checkIfChecked(vastausVaihtoehto.id)}\r\n                                    onChange={() => handleChange(vastausVaihtoehto.id)}\r\n                                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                />\r\n                                {vastausVaihtoehto.vaihtoehto}\r\n                            </div>)}\r\n                    </div>\r\n                }\r\n\r\n\r\n\r\n                <div style={{ padding: 50 }}>\r\n\r\n                    {//arrayEquals(vastaukset.vastaukset, oikeatVastaukset) && state.näytäVastaukset &&\r\n                        // <img width={50} height={50} src={logo} alt=\"Loading...\" />\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Kysymys","export default __webpack_public_path__ + \"static/media/selmaSpin.e96f6d9a.gif\";","\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const uusiKysymys = (id = uuidv4()) => {\r\n\r\n    let kysymys =\r\n    {\r\n        id: id,\r\n        kuvaus: \"Kysymyksen kuvaus\",\r\n        vastausVaihtoehdot: [],\r\n        oikeatVastaukset: [],\r\n    }\r\n\r\n    return kysymys\r\n}\r\n\r\nexport const uusiKysymysKannasta = (kysymys) => \r\n{\r\n    let uusiKysymys =\r\n    {\r\n        id: kysymys.id,\r\n        aihe_id: kysymys.aihe_id,\r\n        kysymys: kysymys.kysymys,\r\n        vastausVaihtoehdot: kysymys.vastausVaihtoehdot,\r\n        oikeatVastaukset: [],\r\n    }\r\n\r\n    return uusiKysymys\r\n}","\r\n\r\nconst getEnvironment = () =>\r\n{\r\n    switch (process.env.NODE_ENV) {\r\n        case 'production':\r\n            return 'https://tentti-app.herokuapp.com'\r\n        case 'development':\r\n            return 'http://localhost:4000'\r\n        case 'test':\r\n            return 'http://localhost:4000'\r\n        default:\r\n            return 'http://localhost:4000'\r\n    }\r\n}\r\n\r\nconst ServerSettings =\r\n{\r\n    baseURL: getEnvironment()\r\n}\r\n\r\nexport default ServerSettings","import ServerSettings from '../../ServerSettings.js'\r\nimport axios from 'axios';\r\n\r\nexport const haeVastausVaihtoehdot = async (kysymysID) => {\r\n    try {\r\n        let result = await axios.get(ServerSettings.baseURL + \"/vastausvaihtoehto/kysymys/\" + kysymysID)\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"vastausvaihtoehto haku ei onnistunut\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\n\r\nexport const haeVastausVaihtoehdotJaLiitäKysymykseen = async (kysymys) => {\r\n    try {\r\n        let result = await axios.get(ServerSettings.baseURL + \"/vastausvaihtoehto/kysymys/\" + kysymys.id)\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n            kysymys.vastausVaihtoehdot = result.data\r\n\r\n            return kysymys\r\n\r\n        } else {\r\n            throw (\"vastausvaihtoehto haku ei onnistunut\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\n\r\n\r\n//Palauttaa uuden komponenti ID:n\r\nexport const lisääVastausVaihtoehto = async (vastausvaihtoehto) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` }\r\n    };\r\n\r\n    try {\r\n\r\n        const result = await axios.post(ServerSettings.baseURL +  \"/authenticated\" + \"/vastausvaihtoehto/\", vastausvaihtoehto, config)\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n            return result.data.toString()\r\n\r\n        } else {\r\n            throw (\"vastausvaihtoehto lisäys ei onnistunut\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\n\r\nexport const poistaVastausVaihtoehto = async (id) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` }\r\n    };\r\n\r\n    try {\r\n        let result = await axios.delete(ServerSettings.baseURL + \"/authenticated\" +  \"/vastausvaihtoehto/\" + id, config)\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"vastausvaihtoehto poisto ei onnistunut\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\nexport const muokkaaVastausVaihtoehtoa = async (id, vastausvaihtoehto) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` }\r\n    };\r\n    \r\n    try {\r\n        let result = await axios.put(ServerSettings.baseURL + \"/authenticated\" +  \"/vastausvaihtoehto/\" + id, vastausvaihtoehto, config)\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"vastausvaihtoehto muokkaus ei onnistunut\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\n","import ServerSettings from '../../ServerSettings.js'\r\nimport axios from 'axios';\r\nimport { haeVastausVaihtoehdotJaLiitäKysymykseen } from \"./vastausVaihtoehtoRequests.js\"\r\n\r\nexport const haeTentinKysymykset = async (id) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` }\r\n    };\r\n\r\n    try {\r\n        let result = await axios.get(ServerSettings.baseURL + \"/authenticated\" + \"/tenttikysymys/\" + id, config)\r\n\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n            console.log(\"Tenttikysymys \" + id)\r\n            console.log(result.data)\r\n\r\n            let kysymykset = result.data\r\n\r\n            let actions = kysymykset.map(kysymys => haeVastausVaihtoehdotJaLiitäKysymykseen(kysymys))\r\n\r\n            return Promise.all(actions).then(data => {return data})\r\n\r\n        } else {\r\n            throw (\"Tenttikysymyshaussa ongelmia\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\nexport const lisääKysymysTenttiin = async (tenttiID, kysymysID) => {\r\n\r\n\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` }\r\n    };\r\n\r\n    let tenttikysymysID =\r\n    {\r\n        tentti_id: tenttiID,\r\n        kysymys_id: kysymysID,\r\n    }\r\n\r\n    try {\r\n\r\n        const result = await axios.post(ServerSettings.baseURL + \"/authenticated\" + \"/tenttikysymys/\", tenttikysymysID, config)\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n            return true\r\n\r\n        } else {\r\n            throw (\"Tenttilisäyksessä ongelmia\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\n","import ServerSettings from '../../ServerSettings.js'\r\nimport axios from 'axios';\r\n\r\n//Palauttaa uuden komponenti ID:n\r\nexport const lisääVastaus = async (vastaus) => {\r\n\r\n    try {\r\n\r\n        const result = await axios.post(ServerSettings.baseURL + \"/vastaus/\", vastaus)\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n            return result.data\r\n\r\n        } else {\r\n            throw (\"Vastaus lisäys ei onnistunut\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\nexport const haeKäyttäjänVastauksetTenttiin = async (käyttäjäID, tenttiID) => {\r\n    try {\r\n\r\n        console.log(\"Haetaan käyttäjän vastaukset\")\r\n\r\n        let result = await axios.get(ServerSettings.baseURL + \"/vastaus/kayttaja/\" + käyttäjäID + \"/tentti/\" + tenttiID)\r\n\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n            console.log(result)\r\n\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"haeKäyttäjänVastauksetTenttiin ongelmia\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\nexport const muokkaaVastausta = async (vastaus) => {\r\n\r\n    console.log(vastaus)\r\n\r\n    try {\r\n        let result = await axios.put(ServerSettings.baseURL + \"/vastaus/\" + vastaus.id, vastaus)\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"Tentin muokkauksessa ongelmia\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}","import { defineMessages } from 'react-intl'\r\n\r\nexport default defineMessages(\r\n    {\r\n        btnVaihdaKieli:\r\n        {\r\n            id: \"app.vaihda-kieli-button\",\r\n            defaultMessage: \"Vaihda Kieli\",\r\n            description: \"Vaihtaa kielen englannin ja suomen välillä\"\r\n        },\r\n\r\n        btnTentti:\r\n        {\r\n            id: \"app.tentit-button\",\r\n            defaultMessage: \"Tentit\",\r\n            description: \"Näyttää tentit\"\r\n        },\r\n\r\n        btnTarkistaState:\r\n        {\r\n            id: \"app.tarkista-state-button\",\r\n            defaultMessage: \"Tarkista State\",\r\n            description: \"Console loggaa staten\"\r\n        },\r\n\r\n        btnVaihdaNormikäyttäjäksi:\r\n        {\r\n            id: \"app.vaihda-normikäyttäjäksi-button\",\r\n            defaultMessage: \"Vaihda Normikäyttäjäksi\",\r\n            description: \"Vaihtaa käyttäjäroolin normikäyttäjäksi\"\r\n        },\r\n\r\n        btnVaihdaAdminiksi:\r\n        {\r\n            id: \"app.vaihda-adminiksi-button\",\r\n            defaultMessage: \"Vaihda Adminiksi\",\r\n            description: \"Vaihtaa käyttäjäroolin adminiksi\"\r\n        },\r\n\r\n\r\n        btnKirjauduUlos:\r\n        {\r\n            id: \"app.kirjaudu-ulos-button\",\r\n            defaultMessage: \"Kirjaudu Ulos\",\r\n            description: \"Kirjautuu ulos tenttiappista\"\r\n        },\r\n\r\n\r\n        btnUusiTili:\r\n        {\r\n            id: \"app.uusi-tili-button\",\r\n            defaultMessage: \"Uusi Tili\",\r\n            description: \"Siirtyy näkymään jossa lisätään uutta tiliä\"\r\n        },\r\n\r\n        \r\n        btnKirjaudu:\r\n        {\r\n            id: \"app.kirjaudu-button\",\r\n            defaultMessage: \"Kirjaudu\",\r\n            description: \"Kirjautuu sisään tenttiappiin\"\r\n        },\r\n\r\n        \r\n        btnLuoTili:\r\n        {\r\n            id: \"app.luo-tili-button\",\r\n            defaultMessage: \"Luo Tili\",\r\n            description: \"Luo uuden käyttäjätilin\"\r\n        },\r\n\r\n        \r\n        btnTakaisinKirjautumiseen:\r\n        {\r\n            id: \"app.takaisin-kirjautumiseen-button\",\r\n            defaultMessage: \"Takaisin Kirjautumiseen\",\r\n            description: \"Palaa käyttäjän luonnista takasin kirjautumissivulle\"\r\n        },\r\n\r\n        btnNäytävastaukset:\r\n        {\r\n            id: \"app.näytä-vastaukset-button\",\r\n            defaultMessage: \"Näytä Vastaukset\",\r\n            description: \"Näyttää vastaukset\"\r\n        },\r\n\r\n        btnPiilotaVastaukset:\r\n        {\r\n            id: \"app.piilota-vastaukset-button\",\r\n            defaultMessage: \"Piilota Vastaukset\",\r\n            description: \"Piilottaa vastaukset\"\r\n        },\r\n\r\n        btnNäytäGraafi:\r\n        {\r\n            id: \"app.näytä-graafi-button\",\r\n            defaultMessage: \"Näytä Graafi\",\r\n            description: \"Näyttää demograafit\"\r\n        },\r\n\r\n        titleKirjautuminen:\r\n        {\r\n            id: \"app.kirjautuminen-title\",\r\n            defaultMessage: \"Kirjautuminen\",\r\n            description: \"Kirjautumisotsikko login-sivulla\"\r\n        },\r\n\r\n\r\n        titleTilinluonti:\r\n        {\r\n            id: \"app.tilinluonti-title\",\r\n            defaultMessage: \"Tilin luonti\",\r\n            description: \"Kirjautumisotsikko tilinluomis-sivulla\"\r\n        },\r\n\r\n        PlaceholderKäyttäjätunnus:\r\n        {\r\n            id: \"app.käyttäjätunnus-placeholder\",\r\n            defaultMessage: \"Käyttäjätunnus\",\r\n            description: \"Placeholder teksti käyttäjätunnus-kentässä\"\r\n        },\r\n\r\n        PlaceholderSalasana:\r\n        {\r\n            id: \"app.salasana-placeholder\",\r\n            defaultMessage: \"Salasana\",\r\n            description: \"Placeholder teksti salasana-kentässä\"\r\n        },\r\n\r\n        PlaceholderSalasanaUudestaan:\r\n        {\r\n            id: \"app.salasana-uudelleen-placeholder\",\r\n            defaultMessage: \"Salasana Uudestaan\",\r\n            description: \"Placeholder teksti salasananuudelleen-kentässä\"\r\n        },\r\n    }\r\n)","\r\nimport { UserContext } from '../../App.js'\r\nimport { useContext, useState } from 'react';\r\nimport rand from '../Random'\r\n\r\nimport Kysymys from './Kysymys'\r\nimport logo from '../../images/selmaSpin.gif'\r\nimport Button from '@material-ui/core/Button';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Radar } from 'react-chartjs-2'\r\nimport { uusiKysymysKannasta } from '../ObjektiRakentajat/kysymysObjekti'\r\nimport { haeTentinKysymykset } from \"../HttpRequests/tenttiKysymysRequests.js\"\r\nimport { lisääVastaus, haeKäyttäjänVastauksetTenttiin, muokkaaVastausta } from \"../HttpRequests/vastausRequests.js\"\r\nimport messages from '../../messages';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n\r\nfunction VastausLista() {\r\n\r\n    const { state, dispatch } = useContext(UserContext)\r\n    const [graafi, setGraafi] = useState(0)\r\n\r\n\r\n    let lataus = undefined\r\n\r\n    const valitseTentti = (tentti) => {\r\n\r\n        haeTentinKysymykset(tentti.id).then((kysymykset) => {\r\n\r\n            let tmpKysymykset = []\r\n            let tmpTentit = JSON.parse(JSON.stringify(state.tentit))\r\n            let muutettuTentti = haeIDllä(tentti.id, tmpTentit)\r\n\r\n            kysymykset.forEach(kysymys => {\r\n                let uusiKysymys = uusiKysymysKannasta(kysymys)\r\n                tmpKysymykset.push(uusiKysymys)\r\n            });\r\n\r\n            muutettuTentti.kysymykset = tmpKysymykset\r\n            dispatch({ type: \"MuutaTenttejä\", payload: tmpTentit })\r\n\r\n\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n        haeKäyttäjänVastauksetTenttiin(state.käyttäjäID, tentti.id).then((vastaukset) => {\r\n\r\n            dispatch({ type: \"MuutaVastaukset\", payload: vastaukset.data })\r\n\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n        dispatch({ type: \"PiilotaVastaukset\" })\r\n        dispatch({ type: \"MuutaValittuTentti\", payload: tentti.id })\r\n    }\r\n\r\n    const valitseVastaus = (vaihtoehto_id, id = undefined) => {\r\n\r\n        let tmpVastaukset = [...state.vastaukset]\r\n        let vastaus = haeIDllä(id, tmpVastaukset)\r\n\r\n        if (vastaus === undefined) {\r\n\r\n            vastaus =\r\n            {\r\n                tyyppi: true,\r\n                vaihtoehto_id: vaihtoehto_id,\r\n                käyttäjä_id: state.käyttäjäID,\r\n            }\r\n\r\n            lisääVastaus(vastaus).then((response) => {\r\n\r\n                vastaus.id = response.id.toString()\r\n                vastaus.vastauspäivämäärä = response.vastauspäivämäärä.toString()\r\n                tmpVastaukset.push(vastaus)\r\n                dispatch({ type: \"MuutaVastaukset\", payload: tmpVastaukset })\r\n\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n        }\r\n        else {\r\n            \r\n            vastaus.tyyppi = !vastaus.tyyppi\r\n\r\n            console.log(vastaus.tyyppi)\r\n\r\n            muokkaaVastausta(vastaus).then((response) => {\r\n\r\n                dispatch({ type: \"MuutaVastaukset\", payload: tmpVastaukset })\r\n\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const checkValittuTentti = (valittuTentti) => {\r\n\r\n        if (valittuTentti === undefined) {\r\n            return undefined\r\n        }\r\n\r\n        return valittuTentti.id\r\n    }\r\n\r\n    const lataa = () => {\r\n        if (lataus !== undefined) {\r\n            clearTimeout(lataus)\r\n        }\r\n\r\n        dispatch({ type: \"Lataa\" })\r\n\r\n        lataus = setTimeout(() => {\r\n\r\n            dispatch({ type: \"LopetaLataus\" })\r\n\r\n        }, 1000 * rand(1));\r\n    }\r\n\r\n\r\n\r\n    const muutaNäytävastaukset = () => {\r\n\r\n        if (state.näytäVastaukset) {\r\n\r\n            dispatch({ type: \"PiilotaVastaukset\" })\r\n        }\r\n        else {\r\n            dispatch({ type: \"NäytäVastaukset\" })\r\n        }\r\n\r\n    }\r\n\r\n    const muutaNäytäGraafi = () => {\r\n\r\n        if (state.näytäGraafi) {\r\n\r\n            dispatch({ type: \"PiilotaGraafi\" })\r\n        }\r\n        else {\r\n            dispatch({ type: \"NäytäGraafi\" })\r\n        }\r\n\r\n    }\r\n\r\n    const haeIDllä = (id, taulukko) => {\r\n\r\n        if (id === undefined) {\r\n            return undefined\r\n        }\r\n\r\n\r\n        let subTaulukko = taulukko.find(alkio => alkio.id == id)\r\n\r\n        return subTaulukko\r\n    }\r\n\r\n    const luoGraafi = (type = 0) => {\r\n\r\n        let data\r\n\r\n        switch (type) {\r\n            case 0:\r\n                data = {\r\n                    labels: ['Oikein', 'Väärin'],\r\n                    datasets: [\r\n                        {\r\n                            label: '# of Votes',\r\n                            data: [43, 7],\r\n                            backgroundColor: [\r\n                                'rgba(54, 162, 235, 0.2)',\r\n                                'rgba(255, 99, 132, 0.2)',\r\n\r\n                            ],\r\n                            borderColor: [\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 99, 132, 1)',\r\n\r\n\r\n                            ],\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                }\r\n                return <Pie data={data} />\r\n\r\n            case 1:\r\n                data = {\r\n                    labels: ['Oikein', 'Väärin'],\r\n                    datasets: [\r\n                        {\r\n                            label: '# of Votes',\r\n                            data: [43, 7],\r\n                            backgroundColor: [\r\n                                'rgba(54, 162, 235, 0.2)',\r\n                                'rgba(255, 99, 132, 0.2)',\r\n\r\n                            ],\r\n                            borderColor: [\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 99, 132, 1)',\r\n\r\n\r\n                            ],\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                }\r\n                return <Doughnut data={data} />\r\n            case 2:\r\n\r\n                var options = {\r\n                    scales: {\r\n                        yAxes: [\r\n                            {\r\n                                ticks: {\r\n                                    beginAtZero: true,\r\n                                },\r\n                            },\r\n                        ],\r\n                    },\r\n                }\r\n\r\n                data = {\r\n                    labels: ['Aritmetiikka', 'Todennäköisyys', \"Geometria\", \"Trigonometria\", \"Joukko-oppi\"],\r\n                    datasets: [\r\n                        {\r\n                            label: 'Väärin',\r\n                            data: [2, 1, 3, 1, 0],\r\n                            backgroundColor: 'rgb(255, 99, 132)',\r\n                        },\r\n                        {\r\n                            label: 'Oikein',\r\n                            data: [8, 9, 7, 9, 10],\r\n                            backgroundColor: 'rgb(54, 162, 235)',\r\n                        },\r\n                    ],\r\n                }\r\n\r\n\r\n                return <Bar data={data} options={options} />\r\n\r\n            case 3:\r\n\r\n                var options = {\r\n                    scales: {\r\n                        yAxes: [\r\n                            {\r\n                                stacked: true,\r\n                                ticks: {\r\n                                    beginAtZero: true,\r\n                                },\r\n                            },\r\n                        ],\r\n                        xAxes: [\r\n                            {\r\n                                stacked: true,\r\n                            },\r\n                        ],\r\n                    },\r\n                }\r\n\r\n                data = {\r\n                    labels: ['Aritmetiikka', 'Todennäköisyys', \"Geometria\", \"Trigonometria\", \"Joukko-oppi\"],\r\n                    datasets: [\r\n                        {\r\n                            label: 'Väärin',\r\n                            data: [2, 1, 3, 1, 0],\r\n                            backgroundColor: 'rgb(255, 99, 132)',\r\n                        },\r\n                        {\r\n                            label: 'Oikein',\r\n                            data: [8, 9, 7, 9, 10],\r\n                            backgroundColor: 'rgb(54, 162, 235)',\r\n                        },\r\n                    ],\r\n                }\r\n                return <Bar data={data} options={options} />\r\n\r\n\r\n            case 4:\r\n\r\n                var options = {\r\n\r\n                    scale: {\r\n                        ticks: { beginAtZero: true },\r\n                    },\r\n                }\r\n\r\n                data = {\r\n                    labels: ['Aritmetiikka', 'Todennäköisyys', \"Geometria\", \"Trigonometria\", \"Joukko-oppi\"],\r\n                    datasets: [\r\n                        {\r\n                            label: 'Oikein',\r\n                            data: [8, 9, 7, 9, 10],\r\n                            backgroundColor: 'rgb(54, 162, 235, 0.2)',\r\n                        },\r\n                    ],\r\n                }\r\n\r\n\r\n                return <Radar data={data} options={options} />\r\n        }\r\n\r\n\r\n\r\n        return data\r\n    }\r\n\r\n    const vaihdaGraafi = () => {\r\n        let tmpGraafi = graafi\r\n\r\n        if (tmpGraafi === 4) {\r\n            tmpGraafi = 0\r\n        }\r\n        else {\r\n            tmpGraafi = tmpGraafi + 1\r\n        }\r\n\r\n        setGraafi(tmpGraafi)\r\n    }\r\n\r\n    let valittuTentti = haeIDllä(state.valittuTenttiIndex, state.tentit)\r\n\r\n\r\n    return (<div style={{ width: '100%' }}>\r\n        <div style={{ display: 'flex', flexDirection: 'row', width: '100%', flexWrap: 'wrap' }}>\r\n            {state.tentit.map((tentti, i) =>\r\n\r\n                <Button key={i} color=\"primary\" variant={tentti.id === checkValittuTentti(valittuTentti) ? \"outlined\" : \"text\"} onClick={() => valitseTentti(tentti)} >{tentti.nimi}</Button>\r\n            )}\r\n        </div>\r\n\r\n        {\r\n            state.loading ?\r\n                <div style={{ width: '100%' }}>\r\n                    <img src={logo} alt=\"Loading...\" />\r\n                </div>\r\n                :\r\n\r\n                state.näytäGraafi ?\r\n                    <div>\r\n                        {\r\n                            luoGraafi(graafi)\r\n                        }\r\n\r\n                        <div style={{ paddingTop: 20 }}>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={muutaNäytäGraafi}>Piilota Graafi</Button>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={vaihdaGraafi}>{\"Graafi \" + graafi}</Button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    :\r\n\r\n                    valittuTentti !== undefined && <div style={{ width: '100%' }}>\r\n                        {valittuTentti.kysymykset.map(kysymys =>\r\n                            <Kysymys\r\n                                key={kysymys.id}\r\n                                handleCheckboxChange={valitseVastaus}\r\n                                kysymys={kysymys} />\r\n                        )}\r\n\r\n\r\n\r\n                        <Button color=\"primary\" variant=\"contained\" onClick={muutaNäytävastaukset}>\r\n                            {state.näytäVastaukset ?\r\n                              <FormattedMessage {...messages.btnPiilotaVastaukset} />\r\n                                :\r\n                                <FormattedMessage {...messages.btnNäytävastaukset} />\r\n                            }\r\n                        </Button>\r\n\r\n                        {state.näytäVastaukset &&\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={muutaNäytäGraafi}>   <FormattedMessage {...messages.btnNäytäGraafi} /></Button>\r\n                        }\r\n\r\n                    </div>\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default VastausLista","import React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport axios from 'axios';\r\n\r\nfunction Dropzone(props) {\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n\r\n\r\n        let file  = acceptedFiles[0]\r\n        let url = file && URL.createObjectURL(file)\r\n\r\n        props.getPictureFromDropzone(url)\r\n    \r\n        const config = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n\r\n        let fd = new FormData();\r\n\r\n        acceptedFiles.map((file) => {\r\n            fd.append('Test', file);\r\n        });\r\n\r\n        fd.append(\"customName\", \"böö\" + file.name)\r\n\r\n        const req = axios.post('http://localhost:4000/upload', fd, config)\r\n\r\n    }, [])\r\n\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n\r\n    return (\r\n        <div style={{ border: '2px solid black', width: 500, paddingLeft: 5, paddingRight: 5}} {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            {\r\n                isDragActive ?\r\n                    <p>Drop the files here ...</p> :\r\n                    <p>Drag 'n' drop some files here, or click to select files</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropzone","import { useState } from 'react'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport Dropzone from '../Dropzone'\r\n\r\n\r\n//This is from material-ui documentation\r\n\r\nfunction KysymysMuokattava(props) {\r\n\r\n    const [addPicture, setAddPicture] = useState(false)\r\n    const [picture, setPicture] = useState(undefined)\r\n\r\n    const { kysymys, vastausVaihtoehdot, oikeatVastaukset } = props.kysymys\r\n\r\n\r\n    const checkboxClicked = (e, i) => {\r\n        props.handleInputChange(e.target.checked, props.tenttiID, props.kysymysID, i, true)\r\n    }\r\n\r\n    const muutaKysymyksenKuvaus = (e) => {\r\n        props.handleInputChange(e.target.value, props.tenttiID, props.kysymysID)\r\n    }\r\n\r\n    const muutaVastauksenKuvaus = (e, i) => {\r\n        props.handleInputChange(e.target.value, props.tenttiID, props.kysymysID, i)\r\n    }\r\n\r\n    const PoistaVastaus = (i) => {\r\n        props.handleDelete(props.tenttiID, props.kysymysID, i)\r\n    }\r\n\r\n    const PoistaKysymys = () => {\r\n        props.handleDelete(props.tenttiID, props.kysymysID)\r\n    }\r\n\r\n    const handleLisäys = () => {\r\n        props.handleAdding(props.tenttiID, props.kysymysID)\r\n    }\r\n\r\n    //Testausta varten\r\n    const haeKysymysKomponentinNimi = (kysymysNimi, i) => {\r\n\r\n\r\n        if (kysymysNimi === \"Kysymyksen kuvaus\" || kysymysNimi === undefined) {\r\n\r\n            return \"tyhjä_kysymys\"\r\n        }\r\n\r\n        let paluuarvo = \"kysymys\" + i\r\n\r\n        return paluuarvo\r\n    }\r\n\r\n    //Testausta varten\r\n    const haeVastausvaihtoehtoKomponentinNimi = (vastausVaihtoehtoNimi, i) => {\r\n\r\n        if (vastausVaihtoehtoNimi === \"\") {\r\n\r\n            return \"tyhjä_vastausvaihtoehto\"\r\n        }\r\n\r\n        let paluuarvo = \"vastausvaihtoehto\" + i\r\n\r\n        return paluuarvo\r\n    }\r\n\r\n    const getPictureFromDropzone = (picture) => {\r\n\r\n        console.log(picture)\r\n        setPicture(picture)\r\n    }\r\n\r\n    return (\r\n\r\n        <Paper style={{ width: '100%', padding: 15 }}>\r\n\r\n            <div style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n\r\n                <div style={{ width: '100%' }}>\r\n                    <TextField\r\n                        name={haeKysymysKomponentinNimi(kysymys, props.kysymysnro)}\r\n                        fullWidth\r\n                        label={kysymys}\r\n                        variant=\"outlined\"\r\n                        onChange={(e) => muutaKysymyksenKuvaus(e)} />\r\n\r\n                    <div style={{ display: 'flex', width: '100%', minHeight: 75, maxHeight: 200, paddingTop: 10,  paddingBottom: 10,  alignItems: 'center' }}>\r\n                        <IconButton onClick={() => PoistaKysymys()}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n\r\n                        {addPicture ?\r\n                            picture ?\r\n                                <div style={{ width: '100%', height: '100%', display: 'flex', alignItems: 'center' }}>\r\n                                    <img src={picture} width={150} height={150} />\r\n                                </div>\r\n                                :\r\n                                <Dropzone getPictureFromDropzone={getPictureFromDropzone} />\r\n                            :\r\n                            <IconButton onClick={() => setAddPicture(true)}>\r\n                                <ImageIcon />\r\n                            </IconButton>\r\n                        }\r\n                    </div>\r\n                    {vastausVaihtoehdot.map((vastausVaihtoehto, i) =>\r\n\r\n                        <div key={i} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', marginTop: 10 }}>\r\n                            <Checkbox\r\n                                checked={vastausVaihtoehto.oikea_vastaus}\r\n                                onChange={(e) => checkboxClicked(e, vastausVaihtoehto.id)}\r\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                            />\r\n                            <TextField\r\n                                name={haeVastausvaihtoehtoKomponentinNimi(vastausVaihtoehto.vaihtoehto, i)}\r\n                                fullWidth\r\n                                label={vastausVaihtoehto.vaihtoehto}\r\n                                variant=\"outlined\"\r\n                                onChange={(e) => muutaVastauksenKuvaus(e, vastausVaihtoehto.id)} />\r\n\r\n                            <IconButton onClick={() => PoistaVastaus(vastausVaihtoehto.id)}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </div>)}\r\n\r\n                    <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                        <IconButton name={\"LisääVastausvaihtoehto\"} onClick={() => handleLisäys()} >\r\n                            <AddCircleRoundedIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default KysymysMuokattava","\r\n\r\n\r\nexport const uusiVastausvaihtoehto = (kysymysID) => {\r\n\r\n    let vastausvaihtoehto =\r\n    {\r\n        vaihtoehto: \"\",\r\n        oikea_vastaus: false,\r\n        kysymys_id: kysymysID,\r\n    }\r\n\r\n    return vastausvaihtoehto\r\n}\r\n\r\n\r\n","import ServerSettings from '../../ServerSettings.js'\r\nimport axios from 'axios';\r\n\r\nexport const haeTentit = async () => {\r\n\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` }\r\n    };\r\n\r\n    try {\r\n        let result = await axios.get(ServerSettings.baseURL + \"/authenticated\" + \"/tentti/\", config)\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n            console.log(\"Tentit haettu\")\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"Tenttihaussa ongelmia\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\n//Palauttaa uuden komponenti ID:n\r\nexport const lisääTentti = async (tentti) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` }\r\n    };\r\n  \r\n    try {\r\n\r\n        const result = await axios.post(ServerSettings.baseURL + \"/authenticated\" + \"/tentti/\", tentti, config)\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n         \r\n            return result.data.toString()\r\n\r\n        } else {\r\n            throw (\"Tenttilisäyksessä ongelmia\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\n\r\nexport const poistaTentti = async (id) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` }\r\n    };\r\n\r\n    try {\r\n        let result = await axios.delete(ServerSettings.baseURL + \"/authenticated\"  + \"/tentti/\" + id, config)\r\n\r\n   \r\n        if (result.statusText === \"OK\") {\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"Tentin poistossa ongelmia\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\nexport const muokkaaTenttiä = async (id, tentti) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` }\r\n    };\r\n\r\n    try {\r\n        let result = await axios.put(ServerSettings.baseURL + \"/authenticated\"  + \"/tentti/\" + id, tentti, config)\r\n\r\n      \r\n        if (result.statusText === \"OK\") {\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"Tentin muokkauksessa ongelmia\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\nexport const julkaiseTentti = async (id) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` }\r\n    };\r\n\r\n    const bodyParameters = {\r\n    };\r\n\r\n\r\n    try {\r\n        let result = await axios.put(ServerSettings.baseURL + \"/authenticated\"  + \"/julkaise/tentti/\" + id, bodyParameters, config)\r\n\r\n        if (result.data.length > 0) {\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"Tentin julkaisu ei onnistunut\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}","import ServerSettings from '../../ServerSettings.js'\r\nimport axios from 'axios';\r\n\r\nexport const haeKysymykset = async () => {\r\n    try {\r\n        let result = await axios.get(ServerSettings.baseURL + \"/kysymys/\")\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"Kysymysten haku ei onnistunut\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\n//Palauttaa uuden komponenti ID:n\r\nexport const lisääKysymys = async (kysymys) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` }\r\n    };\r\n\r\n    try {\r\n\r\n        const result = await axios.post(ServerSettings.baseURL + \"/authenticated\" + \"/kysymys/\", kysymys, config)\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n            return result.data.toString()\r\n\r\n        } else {\r\n            throw (\"Kysymyksen lisäys ei onnistunut\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\n\r\nexport const poistaKysymys = async (id) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` }\r\n    };\r\n\r\n    try {\r\n        let result = await axios.delete(ServerSettings.baseURL + \"/authenticated\" + \"/kysymys/\" + id, config)\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"Kysymyksen poisto ei onnistunut\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\nexport const muokkaaKysymystä = async (id, kysymys) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` }\r\n    };\r\n\r\n    try {\r\n        let result = await axios.put(ServerSettings.baseURL + \"/authenticated\" + \"/kysymys/\" + id, kysymys, config)\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"Kysymyksen muokkaus ei onnistunut\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\n","\r\nimport { UserContext } from '../../App.js'\r\nimport { useContext} from 'react';\r\n\r\nimport KysymysMuokattava from './KysymysMuokattava'\r\nimport logo from '../../images/selmaSpin.gif'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { uusiKysymys, uusiKysymysKannasta } from '../ObjektiRakentajat/kysymysObjekti'\r\nimport { uusiTentti } from '../ObjektiRakentajat/tenttiObjekti'\r\nimport { uusiVastausvaihtoehto } from '../ObjektiRakentajat/vastausVaihtoehtoObjekti'\r\n\r\nimport { poistaTentti, lisääTentti, muokkaaTenttiä } from \"../HttpRequests/tenttiRequests.js\"\r\nimport { poistaKysymys, lisääKysymys, muokkaaKysymystä } from \"../HttpRequests/kysymysRequests.js\"\r\nimport { lisääVastausVaihtoehto, poistaVastausVaihtoehto, muokkaaVastausVaihtoehtoa } from \"../HttpRequests/vastausVaihtoehtoRequests.js\"\r\nimport { lisääKysymysTenttiin, haeTentinKysymykset } from \"../HttpRequests/tenttiKysymysRequests.js\"\r\n\r\nfunction VastausListaAdmin() {\r\n\r\n    const { state, dispatch } = useContext(UserContext)\r\n   \r\n    const valitseTentti = (tentti) => {\r\n\r\n        haeTentinKysymykset(tentti.id).then((kysymykset) => {\r\n\r\n            let tmpKysymykset = []\r\n            let tmpTentit = JSON.parse(JSON.stringify(state.tentit))\r\n            let muutettuTentti = haeIDllä(tentti.id, tmpTentit)\r\n\r\n            kysymykset.forEach(kysymys => {\r\n                let uusiKysymys = uusiKysymysKannasta(kysymys)\r\n                tmpKysymykset.push(uusiKysymys)\r\n            });\r\n\r\n            muutettuTentti.kysymykset = tmpKysymykset\r\n            dispatch({ type: \"MuutaTenttejä\", payload: tmpTentit })\r\n\r\n\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n        dispatch({ type: \"PiilotaVastaukset\" })\r\n        dispatch({ type: \"MuutaValittuTentti\", payload: tentti.id })\r\n    }\r\n\r\n    //Jos tenttiID ja kysymysID -> Lisätään vastausvaihtoehto\r\n    //Jos tenttiID -> lisätään kysymys\r\n    //muuten -> lisätään tentti\r\n    const lisääKomponentti = (tenttiID = undefined, kysymysID = undefined) => {\r\n\r\n        let tmpTentit = JSON.parse(JSON.stringify(state.tentit))\r\n\r\n        if (tenttiID === undefined) {\r\n\r\n            let tentti = uusiTentti()\r\n            lisääTentti(tentti).then((response) => {\r\n\r\n\r\n                tentti.id = response\r\n                tmpTentit.push(tentti)\r\n                lisääTenttiTestaustaVarten(tentti.id)\r\n                dispatch({ type: \"MuutaTenttejä\", payload: tmpTentit })\r\n\r\n\r\n\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let tenttiJohonLisätään = haeIDllä(tenttiID, tmpTentit)\r\n        let kysymysJohonLisätään = haeIDllä(kysymysID, tenttiJohonLisätään.kysymykset)\r\n\r\n        if (tenttiID !== undefined && kysymysID !== undefined) {\r\n\r\n            let vVaihtoehto = uusiVastausvaihtoehto(kysymysID)\r\n\r\n            lisääVastausVaihtoehto(vVaihtoehto).then((response) => {\r\n\r\n                vVaihtoehto.id = response\r\n                kysymysJohonLisätään.vastausVaihtoehdot.push(vVaihtoehto)\r\n                dispatch({ type: \"MuutaTenttejä\", payload: tmpTentit })\r\n\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n        }\r\n        else if (tenttiID !== undefined) {\r\n\r\n            let kysymys = uusiKysymys()\r\n\r\n            lisääKysymys(kysymys).then((response) => {\r\n\r\n                kysymys.id = response\r\n\r\n                lisääKysymysTenttiin(tenttiJohonLisätään.id, kysymys.id).then((response) => {\r\n\r\n                    tenttiJohonLisätään.kysymykset.push(kysymys)\r\n                    dispatch({ type: \"MuutaTenttejä\", payload: tmpTentit })\r\n\r\n                }).catch((error) => {\r\n                    console.log(error)\r\n                })\r\n\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //Jos tenttiID ja kysymysID ja i -> Muuta vastausvaihtoehtoa\r\n    //Jos tenttiID ja kysymysID -> Muuta kysymyskuvausta\r\n    //Jos tenttiID -> Muuta tenttinimeä\r\n    const muutaKomponenttia = (uusiArvo, tenttiID, kysymysID = undefined, vastausVaihtoehtoID = undefined, oikeaVastausMuutos = false) => {\r\n\r\n        let tmpTentit = JSON.parse(JSON.stringify(state.tentit))\r\n\r\n        let muutettuTentti = haeIDllä(tenttiID, tmpTentit)\r\n        let muutettuKysymys\r\n        let muutettuVastausvaihtoehto\r\n\r\n        if (muutettuTentti.kysymykset === undefined) {\r\n            muutettuKysymys = undefined\r\n        }\r\n        else {\r\n\r\n            muutettuKysymys = haeIDllä(kysymysID, muutettuTentti.kysymykset)\r\n        }\r\n\r\n        if (muutettuKysymys !== undefined) {\r\n            muutettuVastausvaihtoehto = haeIDllä(vastausVaihtoehtoID, muutettuKysymys.vastausVaihtoehdot)\r\n        }\r\n\r\n        if (oikeaVastausMuutos) {\r\n            muutettuVastausvaihtoehto.oikea_vastaus = uusiArvo\r\n\r\n            muokkaaVastausVaihtoehtoa(vastausVaihtoehtoID, muutettuVastausvaihtoehto).then((response) => {\r\n\r\n                dispatch({ type: \"MuutaTenttejä\", payload: tmpTentit })\r\n\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n        }\r\n        else if (kysymysID !== undefined && vastausVaihtoehtoID !== undefined) {\r\n\r\n            muutettuVastausvaihtoehto.vaihtoehto = uusiArvo\r\n\r\n            muokkaaVastausVaihtoehtoa(vastausVaihtoehtoID, muutettuVastausvaihtoehto).then((response) => {\r\n\r\n                dispatch({ type: \"MuutaTenttejä\", payload: tmpTentit })\r\n\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n        }\r\n        else if (kysymysID !== undefined) {\r\n\r\n            muutettuKysymys.kysymys = uusiArvo\r\n\r\n            muokkaaKysymystä(kysymysID, muutettuKysymys).then((response) => {\r\n\r\n                dispatch({ type: \"MuutaTenttejä\", payload: tmpTentit })\r\n\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n        }\r\n        else {\r\n            muutettuTentti.nimi = uusiArvo\r\n\r\n            muokkaaTenttiä(tenttiID, muutettuTentti).then((response) => {\r\n\r\n                dispatch({ type: \"MuutaTenttejä\", payload: tmpTentit })\r\n\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n        }\r\n\r\n        // dispatch({ type: \"MuutaTenttejä\", payload: tmpTentit })\r\n    }\r\n\r\n    //Jos tenttiID ja kysymysID ja i -> Poista vastaus\r\n    //Jos tenttiID ja kysymysID -> Poista kysymys\r\n    //Jos tenttiID -> Poista tentti\r\n    const poistaKomponentti = (tenttiID, kysymysID = undefined, vastausVaihtoehtoID = undefined) => {\r\n\r\n        let tmpTentit = JSON.parse(JSON.stringify(state.tentit))\r\n\r\n        let PoistettavanTentti = haeIDllä(tenttiID, tmpTentit)\r\n        let PoistettavanKysymys\r\n        let PoistettavaVastausvaihtoehto\r\n\r\n        if (PoistettavanTentti.kysymykset === undefined) {\r\n            PoistettavanKysymys = undefined\r\n        }\r\n        else {\r\n            PoistettavanKysymys = haeIDllä(kysymysID, PoistettavanTentti.kysymykset)\r\n        }\r\n\r\n        if (PoistettavanKysymys !== undefined) {\r\n            PoistettavaVastausvaihtoehto = haeIDllä(vastausVaihtoehtoID, PoistettavanKysymys.vastausVaihtoehdot)\r\n        }\r\n\r\n\r\n        if (kysymysID !== undefined && vastausVaihtoehtoID !== undefined) {\r\n\r\n            poistaVastausVaihtoehto(vastausVaihtoehtoID).then((response) => {\r\n\r\n                PoistettavanKysymys.vastausVaihtoehdot = PoistettavanKysymys.vastausVaihtoehdot.filter(vastausvaihtoehto => vastausvaihtoehto.id !== vastausVaihtoehtoID)\r\n                dispatch({ type: \"MuutaTenttejä\", payload: tmpTentit })\r\n\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n        }\r\n        else if (kysymysID !== undefined) {\r\n\r\n            poistaKysymys(kysymysID).then((response) => {\r\n\r\n                PoistettavanTentti.kysymykset = PoistettavanTentti.kysymykset.filter(kysymys => kysymys.id !== kysymysID)\r\n                dispatch({ type: \"MuutaTenttejä\", payload: tmpTentit })\r\n\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n        }\r\n        else {\r\n            tmpTentit = tmpTentit.filter(tentti => tentti.id !== tenttiID)\r\n\r\n            poistaTentti(tenttiID).then((response) => {\r\n\r\n                dispatch({ type: \"MuutaTenttejä\", payload: tmpTentit })\r\n\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const haeIDllä = (id, taulukko) => {\r\n\r\n        if (id === undefined) {\r\n            return undefined\r\n        }\r\n\r\n        if (taulukko === undefined) {\r\n            return undefined\r\n        }\r\n\r\n        return taulukko.find(alkio => alkio.id === id)\r\n    }\r\n\r\n    const checkValittuTentti = (valittuTentti) => {\r\n\r\n        if (valittuTentti === undefined) {\r\n            return undefined\r\n        }\r\n\r\n        return valittuTentti.id\r\n    }\r\n\r\n\r\n    const muutaTenttiä = (e, tentti) => {\r\n\r\n        muutaKomponenttia(e.target.value, tentti.id)\r\n    }\r\n\r\n    //Lisää staten listaan objektin jossa on tässä sessiossa luodun tentin ID ja tenttiä vastaavan UI komponentin nimi\r\n    const lisääTenttiTestaustaVarten = (tenttiID) => {\r\n        let tmpTestausTentit = [...state.testausTentit]\r\n\r\n        let pituus = tmpTestausTentit.length\r\n\r\n        let tmpTentti =\r\n        {\r\n            id: tenttiID,\r\n            nimi: \"uusiTentti\" + (pituus + 1)\r\n        }\r\n\r\n        tmpTestausTentit.push(tmpTentti)\r\n\r\n        dispatch({ type: \"LisääTestausTentti\", payload: tmpTestausTentit })\r\n    }\r\n\r\n    //Testausta varten\r\n    const haeTenttiKomponentinNimi = (tentinNimi, i) => {\r\n\r\n        if (tentinNimi === \"Tentin nimi\") {\r\n            return \"tyhjä_tentti\"\r\n        }\r\n\r\n        let paluuarvo = \"tentti\" + i\r\n\r\n        return paluuarvo\r\n    }\r\n\r\n    \r\n\r\n  \r\n\r\n    let valittuTentti = haeIDllä(state.valittuTenttiIndex, state.tentit)\r\n\r\n    return (<div style={{ width: '100%' }}>\r\n        <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', width: '100%' }}>\r\n            {state.tentit.map((tentti, i) =>\r\n\r\n                <div key={i} style={{ display: 'flex', flexDirection: 'row' }} >\r\n                    <div onClick={() => valitseTentti(tentti)}>\r\n                        <TextField\r\n                            name={haeTenttiKomponentinNimi(tentti.nimi, i)}\r\n                            color={tentti.id === checkValittuTentti(state.valittuTenttiIndex) ? \"primary\" : \"secondary\"}\r\n                            fullWidth\r\n                            label={tentti.nimi}\r\n                            variant=\"outlined\"\r\n                            onChange={(e) => muutaTenttiä(e, tentti)} />\r\n                    </div>\r\n                    <IconButton onClick={() => poistaKomponentti(tentti.id)}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n\r\n                    \r\n                </div>\r\n            )}\r\n\r\n            <IconButton name={\"LisääTenttiButton\"} onClick={() => lisääKomponentti()} >\r\n                <AddCircleRoundedIcon />\r\n            </IconButton>\r\n\r\n        </div>\r\n\r\n        {\r\n            state.loading ?\r\n                <div style={{ width: '100%' }}>\r\n                    <img src={logo} alt=\"Loading...\" />\r\n                </div>\r\n                :\r\n                valittuTentti !== undefined && valittuTentti.kysymykset && <div style={{ width: '100%' }}>\r\n                    {valittuTentti.kysymykset.map((kysymys,i) =>\r\n                        <KysymysMuokattava\r\n                            key={kysymys.id}\r\n                            tenttiID={valittuTentti.id}\r\n                            kysymysID={kysymys.id}\r\n                            handleInputChange={muutaKomponenttia}\r\n                            handleDelete={poistaKomponentti}\r\n                            handleAdding={lisääKomponentti}\r\n                            kysymys={kysymys}\r\n                            kysymysnro={i} />\r\n                    )}\r\n\r\n                    <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: 15 }}>\r\n                        <IconButton name={\"LisääKysymysButton\"} onClick={() => lisääKomponentti(valittuTentti.id)} >\r\n                            <AddCircleRoundedIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default VastausListaAdmin","\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const uusiTentti = () => {\r\n\r\n    let tentti =\r\n    {\r\n        nimi: \"Tentin nimi\",\r\n        minimipisteet: \"5\",\r\n        kysymykset: [],\r\n    }\r\n\r\n    return tentti\r\n}\r\n\r\n\r\n","import ServerSettings from '../../ServerSettings.js'\r\nimport axios from 'axios';\r\n\r\n\r\nexport const loginUsername = async (credentials) => {\r\n  \r\n    try {\r\n\r\n        console.log(ServerSettings)\r\n\r\n        let result = await axios.post(ServerSettings.baseURL + \"/login/\", credentials)\r\n\r\n      \r\n        if (result.statusText === \"OK\") {\r\n\r\n     \r\n            return result\r\n\r\n        } else {\r\n            throw (\"Kirjautuminen ei onnistunut\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n        \r\n       \r\n        throw (exception)\r\n    }\r\n}\r\n\r\nexport const loginToken = async (token) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    };\r\n\r\n    const bodyParameters = {\r\n     };\r\n\r\n     console.log(config)\r\n  \r\n    try {\r\n        let result = await axios.post(ServerSettings.baseURL + \"/authenticated\" + \"/loginToken/\", bodyParameters, config)\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"Kirjautuminen ei onnistunut\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n","import ServerSettings from '../../ServerSettings.js'\r\nimport axios from 'axios';\r\n\r\nexport const registerUser = async (credentials) => {\r\n  \r\n    try {\r\n        let result = await axios.post(ServerSettings.baseURL + \"/rekisteroi/\", credentials)\r\n\r\n        if(result.status === 400)\r\n        {\r\n            throw (\"Rekisteröinti ei onnistunut\")\r\n        }\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"Rekisteröinti ei onnistunut\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n","import Swal from 'sweetalert2'\r\n\r\nexport const LoginSuccess = (username) =>\r\n{\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n            toast.addEventListener('mouseenter', Swal.stopTimer)\r\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n        }\r\n    })\r\n\r\n    Toast.fire({\r\n        icon: 'success',\r\n        title: 'Tervetuloa ' + username\r\n    })\r\n}\r\n\r\nexport const TriggerToast = (message) =>\r\n{\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: 'bottom-end',\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n            toast.addEventListener('mouseenter', Swal.stopTimer)\r\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n        }\r\n    })\r\n\r\n    Toast.fire({\r\n        icon: 'success',\r\n        title: message\r\n    })\r\n}","import Button from '@material-ui/core/Button';\r\nimport './StoryButton.css'\r\n\r\nfunction StoryButton (props)\r\n{\r\n    const {color = \"color\", children, ...rest} = props\r\n\r\n    return(\r\n\r\n        <Button className={`StoryButton`} color={color} variant='contained'{...rest}>\r\n            {children}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default StoryButton","\r\nimport { UserContext } from '../../App.js'\r\nimport { useContext, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { loginUsername } from '../HttpRequests/loginRequests.js'\r\nimport { registerUser } from '../HttpRequests/registerRequests.js'\r\nimport Swal from 'sweetalert2'\r\nimport { LoginSuccess } from '../SweetAlerts.js'\r\nimport messages from '../../messages';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport StoryButton from '../StorybookComponents'\r\n\r\n\r\n\r\nfunction Login() {\r\n\r\n  \r\n    const LoginWithUsername = async () => {\r\n\r\n      \r\n        let credentials =\r\n        {\r\n            käyttäjätunnus: username,\r\n            salasana: password,\r\n        }\r\n\r\n        try {\r\n            let LoggedUser = await loginUsername(credentials)\r\n\r\n            localStorage.setItem('jwtToken', LoggedUser.data.token);\r\n\r\n            LoginSuccess(credentials.käyttäjätunnus)\r\n\r\n            dispatch({ type: \"MuutaKäyttäjäID\", payload: LoggedUser.data.user.id })\r\n            dispatch({ type: \"MuutaKäyttäjäRooli\", payload: LoggedUser.data.user.rooli })\r\n\r\n        }\r\n        catch (e) {\r\n\r\n            console.log(e)\r\n\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 3000,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Kirjautuminen epäonnistui'\r\n            })\r\n        }\r\n    }\r\n\r\n    const RegisterUser = async () => {\r\n\r\n        if (username === \"\") {\r\n            Swal.fire('Tyhjä käyttäjätunnus', 'Valitse itsellesi käyttäjätunnus', 'error')\r\n            return\r\n        }\r\n\r\n        if (password === \"\") {\r\n            Swal.fire('Tyhjä salasana', 'Valitse itsellesi salasana', 'error')\r\n            return\r\n        }\r\n\r\n        if (password !== passwordAgain) {\r\n            Swal.fire('Salasanat eivät täsmää', 'Kirjoita molempiin salasanakenttiin sama salasana', 'error')\r\n            return\r\n        }\r\n\r\n\r\n\r\n        let credentials =\r\n        {\r\n            käyttäjätunnus: username,\r\n            salasana: password,\r\n        }\r\n\r\n        try {\r\n            await registerUser(credentials)\r\n\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 3000,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n\r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Rekisteröinti onnistui!'\r\n            })\r\n\r\n            setIsLogin(!isLogin)\r\n        }\r\n        catch\r\n        {\r\n\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'error',\r\n                title: 'Rekisteröinti ei onnistunut',\r\n                showConfirmButton: false,\r\n                timer: 2500\r\n            })\r\n\r\n            return\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const changeLoginType = () => {\r\n\r\n        dispatch({ type: \"MuutaPassword\", payload: \"\" })\r\n        dispatch({ type: \"MuutaPasswordAgain\", payload: \"\" })\r\n        setIsLogin(!isLogin)\r\n\r\n    }\r\n\r\n    const [isLogin, setIsLogin] = useState(true)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordAgain, setPasswordAgain] = useState(\"\")\r\n\r\n    const { state, dispatch } = useContext(UserContext)\r\n\r\n\r\n    return (<div style={{ width: '100%', display: \"flex\", flexDirection: 'column', justifyContent: 'center', alignItems: 'center', paddingTop: 100 }}>\r\n\r\n        {isLogin ?\r\n            <div style={{ display: \"flex\", flexDirection: 'column', width: '50%', justifyContent: 'space-between' }}>\r\n                <h1>  <FormattedMessage {...messages.titleKirjautuminen} /></h1>\r\n\r\n                <TextField\r\n\r\n                    name=\"username_field\"\r\n\r\n                    style={{ height: 65 }}\r\n                    text={username}\r\n                    variant=\"outlined\"\r\n                    label={<FormattedMessage {...messages.PlaceholderKäyttäjätunnus} />}\r\n                    onChange={(e) => setUsername(e.target.value)} />\r\n\r\n\r\n                <TextField\r\n\r\n                    name=\"password_field\"\r\n                    style={{ height: 65 }}\r\n                    text={password}\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    label={<FormattedMessage {...messages.PlaceholderSalasana} />}\r\n                    onChange={(e) => setPassword(e.target.value)} />\r\n\r\n\r\n            </div>\r\n            :\r\n            <div style={{ display: \"flex\", flexDirection: 'column', width: '50%' }}>\r\n                <h1> <FormattedMessage {...messages.titleTilinluonti} /></h1>\r\n\r\n                <TextField\r\n\r\n                    style={{ height: 65 }}\r\n                    label={<FormattedMessage {...messages.PlaceholderKäyttäjätunnus} />}\r\n                    text={username}\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => setUsername(e.target.value)} />\r\n\r\n\r\n\r\n                <TextField\r\n\r\n                    style={{ height: 65 }}\r\n                    label={<FormattedMessage {...messages.PlaceholderSalasana} />}\r\n                    text={password}\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => setPassword(e.target.value)} />\r\n\r\n                <TextField\r\n\r\n                    style={{ height: 65 }}\r\n                    label={<FormattedMessage {...messages.PlaceholderSalasanaUudestaan} />}\r\n                    text={passwordAgain}\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => setPasswordAgain(e.target.value)} />\r\n\r\n\r\n            </div>\r\n\r\n\r\n        }\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", width: '50%', paddingTop: 30, justifyContent: 'flex-end' }}>\r\n            <StoryButton style={{ marginRight: 5 }} color=\"primary\" variant=\"contained\" onClick={changeLoginType}>{isLogin ? <FormattedMessage {...messages.btnUusiTili} /> : <FormattedMessage {...messages.btnTakaisinKirjautumiseen} />}</StoryButton>\r\n            {isLogin ?\r\n                <StoryButton name=\"login_button\" color=\"primary\" variant=\"contained\" onClick={LoginWithUsername}><FormattedMessage {...messages.btnKirjaudu} /></StoryButton>\r\n                :\r\n                <StoryButton color=\"primary\" variant=\"contained\" onClick={RegisterUser}><FormattedMessage {...messages.btnLuoTili} /></StoryButton>\r\n            }\r\n        </div>\r\n\r\n    </div >)\r\n\r\n\r\n}\r\n\r\nexport default Login","import { useEffect, useReducer, createContext, useRef } from \"react\"\nimport Button from '@material-ui/core/Button';\n\nimport VastausLista from './components/NormalUser/VastausLista'\nimport VastausListaAdmin from './components/Admin/VastausListaAdmin'\nimport { haeTentit } from \"./components/HttpRequests/tenttiRequests.js\"\nimport Login from \"./components/LoginPage/Login.js\"\nimport { loginToken } from \"./components/HttpRequests/loginRequests.js\"\nimport { LoginSuccess, TriggerToast } from './components/SweetAlerts.js'\nimport { FormattedMessage } from 'react-intl';\nimport messages from './messages';\n\nconst mainContainerStyle =\n{\n  display: 'flex',\n  flex: 1,\n  flexDirection: 'column',\n  alignItems: 'center',\n  paddingTop: 20,\n  marginBottom: 50,\n\n}\n\nconst tableContainerStyle =\n{\n  flexDirection: 'column',\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'flex-start',\n  width: 1184,\n}\n\nconst UserContext = createContext(null)\n\nconst nollaaVastaukset = () => {\n  window.localStorage.removeItem('vastaukset')\n}\n\n\n\nconst initialState =\n{\n  näytäVastaukset: false,\n  valittuTenttiIndex: undefined,\n  vastaukset: [],\n  loading: false,\n  tentit: [],\n  admin: false,\n  näytäGraafi: false,\n  käyttäjäID: undefined,\n  käyttäjäRooli: undefined,\n\n  //Pitää sisällään tässä sessiossa luotujen tenttien ID:t ja nimet näiden tenttien UI komponenteille\n  testausTentit: [],\n\n}\n\nconst reducer = (state = initialState, action) => {\n\n  let newState = JSON.parse(JSON.stringify(state))\n\n  switch (action.type) {\n\n    case \"MuutaTenttejä\":\n      newState.tentit = action.payload\n\n      //Tätä ei ehkä saa tehdä tässä. Jatkossa pitäisi nollata vain jonkun tietyn kysymyksen tiedot\n      nollaaVastaukset()\n\n      return newState\n    case \"NäytäVastaukset\":\n      newState.näytäVastaukset = true\n      return newState\n    case \"PiilotaVastaukset\":\n      newState.näytäVastaukset = false\n      return newState\n    case \"Lataa\":\n      newState.loading = true\n      return newState\n    case \"LopetaLataus\":\n      newState.loading = false\n      return newState\n    case \"MuutaValittuTentti\":\n      newState.valittuTenttiIndex = action.payload\n      return newState\n    case \"MuutaVastaukset\":\n      newState.vastaukset = action.payload\n      return newState\n    case \"LuoTentit\":\n      newState.tentit = action.payload\n      return newState\n    case \"VaihdaKäyttäjä\":\n      newState.admin = action.payload\n      return newState\n    case \"NäytäGraafi\":\n      newState.näytäGraafi = true\n      return newState\n    case \"PiilotaGraafi\":\n      newState.näytäGraafi = false\n      return newState\n    case \"MuutaKäyttäjäID\":\n      newState.käyttäjäID = action.payload\n      return newState\n\n    case \"MuutaKäyttäjäRooli\":\n      newState.käyttäjäRooli = action.payload\n      return newState\n    case \"LisääTestausTentti\":\n      newState.testausTentit = action.payload\n      return newState\n    case \"KirjauduUlos\":\n      //Käyttäjällä pitäis olla omat tentit jotka haetaan kirjautuessa\n      let tmpTentit = newState.tentit\n      newState = initialState\n      newState.tentit = tmpTentit\n      return newState\n    default:\n      return newState\n\n\n  }\n}\nconst URL = 'ws://localhost:2356'\n\nfunction App(props) {\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const ws = useRef(null)\n\n  useEffect(() => {\n\n    ws.current = new WebSocket(URL)\n\n    ws.current.onopen = () => {\n      // on connecting, do nothing but log it to the console\n      console.log(\"connected\")\n    }\n\n    ws.current.onmessage = evt => {\n      // on receiving a message, add it to the list of messages\n      console.log(\"Got Message\")\n      console.log(evt.data)\n      TriggerToast(evt.data)\n\n    }\n\n    ws.current.onclose = () => {\n      console.log('disconnected')\n      // automatically try to reconnect on connection loss\n      ws.current = new WebSocket(URL)\n    }\n\n\n    LoginWithToken(localStorage.getItem('jwtToken'))\n\n  }, [])\n\n  useEffect(() => {\n    if (state.käyttäjäID === undefined) {\n      return\n    }\n\n    luoTentit(localStorage.getItem('jwtToken')).then((response) => {\n      if (response !== undefined) {\n\n        //luoVastaukset(response)\n        dispatch({ type: \"LuoTentit\", payload: response })\n\n      }\n    })\n  }, [state.käyttäjäID])\n\n  const LoginWithToken = async (token) => {\n\n\n    if (token == \"null\" || token == null) {\n      console.log(\"token is null\")\n      return false\n    }\n\n    try {\n      let LoggedUser = await loginToken(token)\n\n      console.log(LoggedUser)\n\n      LoginSuccess(LoggedUser.data.User.käyttäjätunnus)\n\n      dispatch({ type: \"MuutaKäyttäjäID\", payload: LoggedUser.data.User.id })\n      dispatch({ type: \"MuutaKäyttäjäRooli\", payload: LoggedUser.data.User.rooli })\n      return LoggedUser\n    }\n    catch (e) {\n\n      if (e.response === undefined) {\n        console.log(\"No response from the server\")\n        return false\n      }\n\n\n      if (e.response.status === 401) {\n        localStorage.setItem('jwtToken', null);\n        dispatch({ type: \"KirjauduUlos\" })\n      }\n\n      return false\n    }\n  }\n\n\n  const TarkistaState = () => {\n    console.log(state)\n  }\n\n  const Logout = () => {\n\n    localStorage.setItem('jwtToken', null);\n    dispatch({ type: \"KirjauduUlos\" })\n\n  }\n\n  const luoTentit = async (LoggedToken) => {\n\n\n    console.log(\"LoggedToken\")\n    console.log(LoggedToken)\n\n    let luodutTentit = await haeTentit().then((response) => {\n\n      if (response.data !== undefined) {\n\n        let tentit = response.data\n\n        tentit.forEach(tentti => {\n\n          tentti.kysymykset = []\n        });\n\n        return response.data\n      }\n\n    }).catch((exception) => {\n\n    })\n\n    if (luodutTentit === undefined) {\n      luodutTentit = []\n    }\n\n    return luodutTentit\n  }\n\n  const vaihdaKäyttäjää = () => {\n    //  let vastaukset = luoVastaukset(state.tentit, true)\n    dispatch({ type: \"VaihdaKäyttäjä\", payload: !state.admin })\n  }\n\n  const tentit = () => {\n\n\n  }\n\n  const vaihdaKieli = () => {\n\n    props.vaihdaKieli()\n  }\n\n  const isLoggedIn = () => {\n    if (state.käyttäjäID === undefined) {\n      return false\n    }\n\n    return true\n  }\n\n  return (\n\n    <UserContext.Provider value={{ state, dispatch }}>\n      <div>\n        <div style={{ backgroundColor: '#3F51B5' }}>\n          <div style={{ height: 64, width: '100%', display: 'flex', alignItems: 'center', paddingLeft: 24 }}>\n            <div style={{ height: '100%', width: 200, display: 'flex' }}>\n\n              <Button onClick={vaihdaKieli} style={{ color: 'white' }}>\n                <FormattedMessage {...messages.btnVaihdaKieli} />\n              </Button>\n            </div>\n            {isLoggedIn() ?\n              <div style={{ height: '100%', width: '100%', display: 'flex' }}>\n                {\n                  // <Button onClick={tentit} style={{ color: 'white' }}>\n                  //   <FormattedMessage {...messages.btnTentti} /> \n                  // </Button>\n\n                  //   <Button onClick={TarkistaState} style={{ color: 'white' }}>\n                  //   <FormattedMessage {...messages.btnTarkistaState} />\n                  // </Button>\n                }\n\n                {state.käyttäjäRooli === \"admin\" &&\n                  <Button name={\"VaihdaKäyttäjääButton\"} onClick={vaihdaKäyttäjää} style={{ color: 'white' }}>\n\n                    {state.admin ?\n                      <FormattedMessage {...messages.btnVaihdaNormikäyttäjäksi} />\n                      :\n                      <FormattedMessage {...messages.btnVaihdaAdminiksi} />\n                    }\n                  </Button>\n                }\n                <Button name={\"LogoutButton\"} onClick={Logout} style={{ color: 'white' }}>\n                  <FormattedMessage {...messages.btnKirjauduUlos} />\n                </Button>\n              </div>\n              :\n\n              []\n            }\n\n\n          </div>\n        </div>\n\n        <div style={mainContainerStyle}>\n          {isLoggedIn() ?\n\n            <div style={tableContainerStyle}>\n              {state.admin ?\n                <VastausListaAdmin />\n                :\n                <VastausLista />\n              }\n\n            </div>\n            :\n            <Login />\n          }\n        </div>\n\n\n      </div>\n    </UserContext.Provider>\n\n  );\n}\n\nexport { App, UserContext }\n\n","import React from 'react';\r\nimport { useState } from 'react'\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { addLocaleData } from \"react-intl\";\r\nimport locale_fi from 'react-intl/locale-data/fi';\r\nimport locale_en from 'react-intl/locale-data/en';\r\nimport messages_fi from \"./translations/fi.json\";\r\nimport messages_en from \"./translations/en.json\";\r\nimport { App } from './App';\r\n\r\naddLocaleData([...locale_en, ...locale_fi]);\r\n\r\nconst messages = {\r\n    'fi': messages_fi,\r\n    'en': messages_en\r\n};\r\n\r\nconst InitialLanguage = navigator.language.split(/[-_]/)[0];\r\n\r\nfunction AppIntlWrapper() {\r\n\r\n    const [kieli, setKieli] = useState(InitialLanguage)\r\n\r\n    const vaihdaKieli = () => {\r\n\r\n        if (kieli === \"en\") {\r\n            setKieli(\"fi\")\r\n        }\r\n        else {\r\n            setKieli(\"en\")\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <IntlProvider locale={kieli} messages={messages[kieli]} >\r\n            <App vaihdaKieli={vaihdaKieli} />\r\n        </IntlProvider>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default AppIntlWrapper","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  AppIntlWrapper  from './AppIntlWrapper.js';\nimport './index.css';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <AppIntlWrapper />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}