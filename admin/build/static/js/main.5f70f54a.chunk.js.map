{"version":3,"sources":["ServerSettings.js","components/httpRequests.js","App.js","index.js"],"names":["ServerSettings","baseURL","haeKäyttäjät","secret","a","config","headers","Authorization","axios","get","result","statusText","console","log","poistaKäyttäjä","id","delete","muutaRooli","rooli","body","put","useStyles","makeStyles","table","minWidth","App","useState","käyttäjät","setKäyttäjät","setSecret","noudaKäyttäjät","data","poista","uudetKäyttäjät","filter","käyttäjä","vaihdaRoolia","uusiRooli","find","classes","className","style","display","height","flexDirection","justifyContent","alignItems","Button","marginRight","onClick","color","variant","TextField","text","type","label","onChange","e","target","value","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","käyttäjätunnus","marginTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f70f54a.chunk.js","sourcesContent":["/*\r\nconst ServerSettings =\r\n{\r\n    baseURL: \"http://localhost:4000\"\r\n}\r\n*/\r\n\r\n\r\nconst ServerSettings =\r\n{\r\n    baseURL: \"https://tentti-app.herokuapp.com\"\r\n}\r\n\r\n\r\nexport default ServerSettings","import ServerSettings from '../ServerSettings.js'\r\nimport axios from 'axios';\r\n\r\n\r\nexport const haeKäyttäjät = async (secret) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: secret }\r\n    };\r\n\r\n    try {\r\n        let result = await axios.get(ServerSettings.baseURL + \"/kayttaja\", config)\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n            console.log(\"Käyttäjät haettu haettu\")\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"Käyttäjähaussa ongelmia\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\n\r\nexport const registerAdmin = async (credentials) => {\r\n\r\n    try {\r\n        let result = await axios.post(ServerSettings.baseURL + \"/rekisteroi/\", credentials)\r\n\r\n        if (result.status === 400) {\r\n            throw (\"Rekisteröinti ei onnistunut\")\r\n        }\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"Rekisteröinti ei onnistunut\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\n\r\nexport const poistaKäyttäjä = async (id, secret) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: secret }\r\n    };\r\n\r\n    try {\r\n        let result = await axios.delete(ServerSettings.baseURL + \"/kayttaja/\" + id, config)\r\n\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"käyttäjän poistossa ongelmia\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n\r\n\r\nexport const muutaRooli = async (id, rooli, secret) => {\r\n\r\n    const config = {\r\n        headers: { Authorization: secret },\r\n      \r\n    };\r\n\r\n    const body=\r\n    {\r\n        rooli: rooli\r\n    }\r\n\r\n    try {\r\n        let result = await axios.put(ServerSettings.baseURL + \"/kayttaja/\" + id, body, config)\r\n\r\n\r\n        if (result.statusText === \"OK\") {\r\n\r\n            return result\r\n\r\n        } else {\r\n            throw (\"roolin muutoksessa ongelmia\")\r\n        }\r\n    }\r\n    catch (exception) {\r\n\r\n        throw (exception)\r\n    }\r\n}\r\n","\nimport { useState } from 'react'\nimport Button from '@material-ui/core/Button';\nimport { haeKäyttäjät, poistaKäyttäjä, muutaRooli } from './components/httpRequests.js'\nimport TextField from '@material-ui/core/TextField';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\n\n\nfunction App() {\n\n  const [käyttäjät, setKäyttäjät] = useState([])\n  const [secret, setSecret] = useState(\"\")\n\n\n  const noudaKäyttäjät = async () => {\n\n\n    try {\n      let käyttäjät = await haeKäyttäjät(secret)\n      setKäyttäjät(käyttäjät.data)\n    }\n    catch\n    {\n\n    }\n\n  }\n\n  const poista = async (id) => {\n\n    try\n    {\n      await poistaKäyttäjä(id, secret)\n      let uudetKäyttäjät = käyttäjät.filter(käyttäjä => käyttäjä.id !== id)        \n      setKäyttäjät(uudetKäyttäjät)\n    }\n    catch\n    {\n\n    }\n    \n  }\n\n  const vaihdaRoolia = async (id, rooli) => {\n    let uusiRooli\n\n    if (rooli === 'admin') {\n      uusiRooli = 'normal'\n    }\n    else {\n      uusiRooli = 'admin'\n    }\n\n    try {\n        await muutaRooli(id, uusiRooli, secret)\n\n        let uudetKäyttäjät = [...käyttäjät]\n        \n        let käyttäjä = uudetKäyttäjät.find(käyttäjä => käyttäjä.id === id)\n        käyttäjä.rooli = uusiRooli\n        setKäyttäjät(uudetKäyttäjät)\n    }\n    catch\n    {\n\n    }\n\n  }\n\n  const tmpfunc = () => {\n\n  }\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n\n      <div style={{ display: 'flex', height: 100, flexDirection: 'row,', justifyContent: 'center', alignItems: 'center' }}>\n        <Button style={{ height: 50, marginRight: 20 }} onClick={noudaKäyttäjät} color={\"primary\"} variant=\"outlined\" >\n          Hae Käyttäjät\n              </Button>\n\n        <TextField\n          text={secret}\n          variant=\"outlined\"\n          type=\"password\"\n          label={\"Secret\"}\n          onChange={(e) => setSecret(e.target.value)} />\n      </div>\n\n      <div style={{ display: 'flex', flexDirection: 'row' }}>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>ID</TableCell>\n                <TableCell>Käyttäjätunnus</TableCell>\n                <TableCell>Rooli</TableCell>\n                <TableCell align=\"center\">Muuta Rooli</TableCell>\n                <TableCell align=\"center\">Poisto</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n\n              {käyttäjät.map(käyttäjä =>\n                <TableRow key={käyttäjä.id}>\n\n                  <TableCell align=\"left\" >{käyttäjä.id}</TableCell>\n                  <TableCell align=\"left\" >{käyttäjä.käyttäjätunnus}</TableCell>\n                  <TableCell align=\"left\" >{käyttäjä.rooli}</TableCell>\n                  <TableCell align=\"center\"><Button onClick={() => vaihdaRoolia(käyttäjä.id, käyttäjä.rooli)}>Muuta Rooli</Button> </TableCell>\n                  <TableCell align=\"center\"><Button onClick={() => poista(käyttäjä.id)}>Poista</Button> </TableCell>\n\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n\n      <div style={{ display: 'flex', marginTop: 100, height: 100, flexDirection: 'row,', justifyContent: 'center', alignItems: 'center' }}>\n        <Button style={{ height: 50, marginRight: 20 }} onClick={tmpfunc} color={\"primary\"} variant=\"outlined\" >\n          Create User\n      </Button>\n\n        <TextField\n          style={{ marginRight: 20 }}\n          text={secret}\n          variant=\"outlined\"\n          label={\"Username\"}\n          onChange={(e) => setSecret(e.target.value)} />\n\n        <TextField\n          text={secret}\n          variant=\"outlined\"\n          type=\"password\"\n          label={\"Password\"}\n          onChange={(e) => setSecret(e.target.value)} />\n      </div>\n    </div>\n\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}